syntax = "proto3";

package Schema;

enum GenerationMode {
    AutoAccrue = 0;
    Word = 1;
}

message GameSettings {
    GenerationMode generation_mode = 1;
    string map = 2;
}

message SearchForGame
{
    bool ranked = 1;
}

message GameAvailableOnPort
{
    string game_id = 1;
    string player_id = 2;
    string port = 3;
}

message GameFoundForPlayer
{
    string game_id = 1;
    string player_id = 2;
    string auth_token = 3;
    string address = 4;
}

message PlacePlayerInGame
{
    string player_id = 1;
}

message Registered
{
    string port = 1;
}

message Register
{
    string port = 1;
}


message Oneof_PlayerToMatchmaker {
    string player_id = 1;
    oneof msg {
        SearchForGame search_for_game = 2;
    }
}

message Oneof_MatchMakerToPlayer {
    oneof msg {
        GameFoundForPlayer found_game = 1;
    }
}

message Oneof_HostServerToMatchmaker {
    oneof msg {
        GameAvailableOnPort game_available_on_port = 1;
        Register register = 2;
    }
}

message Oneof_MatchmakerToHostServer {
    oneof msg {
        PlacePlayerInGame place_player_in_game = 2;
        Registered registered = 3;
    }
}

message Oneof_HostServerToGameServer {
    oneof msg {
        Register register = 1;
    }
}

// #####################
// ###### In game ######
// #####################

message IssueDeploymentOrder {
    uint32 source_keep = 1;
    uint32 target_keep = 2;
    optional SoldierType soldier_type = 3;
    optional float percent = 4;
}

message TypeChar {
    string char = 1;
}

message Oneof_PlayerToGameServer {
    string sender_id = 1;
    string auth_token = 2;
    oneof msg {
         IssueDeploymentOrder issue_deployment_order = 3;
         TypeChar type_char = 4;
    }
}

message Oneof_GameServerToPlayer {
    string recipient_id = 1;
    oneof msg {
        InitialState initial_state = 2;
        NewSoldiers new_soldiers = 3;
        RemovedSoldiers removed_soldiers = 4;
        AllKeepUpdates keep_updates = 5;
        NewProjectiles new_projectiles = 6;
        RenderTileUpdates render_tile_updates = 7;
        NewGrownFields new_grown_fields = 8;
        RemovedWords removed_words = 9;
    }
}

enum TileType
{
    Invalid = 0;
    Land = 1;
    Water = 2;
    Tree = 3;
    Field = 4;
}

enum RenderAllianceCase {
    InvalidRenderAlliance = 0;
    FullLand_SingleRoundedCorner = 1;
    FullLand_SplitDownMiddle = 2;
    FullLand_IndividualCorners = 3;
    FullLand_OneOwner = 4;

    ThreeCorners_OneOwner = 5;
    ThreeCorners_TwoOwners = 6;
    ThreeCorners_ThreeOwners = 7;

    TwoAdjacent_TwoOwners = 8;
    TwoAdjacent_OneOwner = 9;

    TwoOpposite_TwoOwners = 10;
    TwoOpposite_OneOwner = 11;
    
    SingleCorner_OneOwner = 12;

    FullWater_NoOnwer = 13;
}

message RenderTile {
    uint32 tile_case = 1;
    repeated int32 corner_alliance = 2;
    RenderAllianceCase alliance_case = 3;
}

message V2 {
    float x = 1;
    float y = 2;
}

message V3 {
    float x = 1;
    float y = 2;
    float z = 3;
}

message V2Int {
    int32 x = 1;
    int32 y = 2;
}

enum SoldierType {
    InvalidSoldier = 0;
    Warrior = 1;
    Archer = 2;
}

message NewSoldier {
    uint32 id = 1;
    float movement_speed = 2;
    SoldierType type = 3;
    uint32 source_keep_id = 4;
    uint32 target_keep_id = 5;
    float row_offset = 6;
}

message NewSoldiers {
    repeated NewSoldier soldiers = 1;
}

message RemovedSoldiers {
    repeated uint32 soldier_ids = 1;
}

message GrownField {
    V2Int grid_pos = 1;
    string text = 2;
    V2 owning_keep_pos = 3;
}

message NewGrownFields {
    repeated GrownField fields = 1;
}

message RemovedWords {
    repeated V2Int positions = 1;
}

enum WalkPathType {
    StraightToRight = 0;
    StraightDown = 1;
    StraightLeft = 2;
    StraightUp = 3;
    CircularLeftDown = 4;
    CircularLeftUp = 5;
    CircularDownLeft = 6;
    CircularDownRight = 7;
    CircularRightDown = 8;
    CircularRightUp = 9;
    CircularUpRight = 10;
    CircularUpLeft = 11;
}

message PathToKeep {
    uint32 target_id = 1;
    repeated V2Int path = 2;
    repeated WalkPathType walk_types = 3;
}

message KeepState {
    uint32 id = 1;
    V2 pos = 2;
    int32 warrior_count = 3;
    int32 archer_count = 4;
    string name = 5;
    int32 alliance = 6;
    repeated PathToKeep paths = 7;
}

message KeepUpdate {
    uint32 id = 1;
    int32 warrior_count = 2;
    int32 archer_count = 3;
    int32 alliance = 4;
}

message AllKeepUpdates {
    repeated KeepUpdate keep_updates = 1;
}

message NewProjectile {
    uint32 id = 1;
    V3 start_pos = 2;
    float birth_time = 3;
    V3 initial_velocity = 4;
    float time_will_land = 5;
    float gravitational_force = 6;
}

message NewProjectiles {
    repeated NewProjectile projectiles = 1;
}

message InitialState {
    repeated KeepState keeps = 1;
    int32 map_width = 2;
    int32 map_height = 3;
    repeated TileType tiles = 4;
    repeated RenderTile render_tiles = 5;
    repeated GrownField grown_fields = 6;
    repeated RemovedWords removed_words = 7;
}

message RenderTileUpdate {
    V2 pos = 1;
    RenderTile render_tile = 2;
}

message RenderTileUpdates {
    repeated RenderTileUpdate render_tile_updates = 1;
}